<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-29T11:01:49 IST" name="Suite" finished-at="2022-04-29T11:04:02 IST" duration-ms="133479">
    <groups>
    </groups>
    <test started-at="2022-04-29T11:01:49 IST" name="Test" finished-at="2022-04-29T11:04:02 IST" duration-ms="133479">
      <class name="testsuite1.test.UserJurisdiction_POST_with_indistinct">
        <test-method signature="Create_UserJurisdiction_depend_with_Region_ID(java.lang.String)[pri:0, instance:testsuite1.test.UserJurisdiction_POST_with_indistinct@38c6f217]" started-at="2022-04-29T11:01:49 IST" name="Create_UserJurisdiction_depend_with_Region_ID" data-provider="ProbaseURL" finished-at="2022-04-29T11:02:13 IST" duration-ms="23572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://lnmjapi.adappt.ai/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_UserJurisdiction_depend_with_Region_ID -->
      </class> <!-- testsuite1.test.UserJurisdiction_POST_with_indistinct -->
      <class name="testsuite1.test.UserJurisdiction_DELETE_with_indistinct">
        <test-method signature="Delete_UserJurisdiction(java.lang.String)[pri:0, instance:testsuite1.test.UserJurisdiction_DELETE_with_indistinct@478190fc]" started-at="2022-04-29T11:02:13 IST" name="Delete_UserJurisdiction" data-provider="ProbaseURL" finished-at="2022-04-29T11:02:36 IST" duration-ms="23283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://lnmjapi.adappt.ai/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Delete_UserJurisdiction -->
      </class> <!-- testsuite1.test.UserJurisdiction_DELETE_with_indistinct -->
      <class name="scenarios.api.UserJurisdiction_GetByJurisdictionID">
        <test-method signature="filename()[pri:0, instance:scenarios.api.UserJurisdiction_GetByJurisdictionID@564fabc8]" started-at="2022-04-29T11:03:09 IST" name="filename" finished-at="2022-04-29T11:03:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filename -->
      </class> <!-- scenarios.api.UserJurisdiction_GetByJurisdictionID -->
      <class name="testsuite1.test.UserJurisdiction_GET_with_distinct_UserID">
        <test-method signature="View_Specific_UserJurisdiction_using_UserID(java.lang.String)[pri:0, instance:testsuite1.test.UserJurisdiction_GET_with_distinct_UserID@3a93b025]" started-at="2022-04-29T11:02:36 IST" name="View_Specific_UserJurisdiction_using_UserID" data-provider="ProbaseURL" finished-at="2022-04-29T11:02:47 IST" duration-ms="10439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://lnmjapi.adappt.ai/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- View_Specific_UserJurisdiction_using_UserID -->
      </class> <!-- testsuite1.test.UserJurisdiction_GET_with_distinct_UserID -->
      <class name="testsuite1.test.UserJurisdiction_PUT_with_distinct_UpdateDefaultJurisdiction_with_JurisdictionID_UserID">
        <test-method signature="View_Specific_UserJurisdiction_UpdateDefaultJurisdiction_using_JurisdictionID_UserID(java.lang.String)[pri:0, instance:testsuite1.test.UserJurisdiction_PUT_with_distinct_UpdateDefaultJurisdiction_with_JurisdictionID_UserID@36902638]" started-at="2022-04-29T11:03:39 IST" name="View_Specific_UserJurisdiction_UpdateDefaultJurisdiction_using_JurisdictionID_UserID" data-provider="ProbaseURL" finished-at="2022-04-29T11:04:02 IST" duration-ms="23036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://lnmjapi.adappt.ai/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- View_Specific_UserJurisdiction_UpdateDefaultJurisdiction_using_JurisdictionID_UserID -->
      </class> <!-- testsuite1.test.UserJurisdiction_PUT_with_distinct_UpdateDefaultJurisdiction_with_JurisdictionID_UserID -->
      <class name="testsuite1.test.UserJurisdiction_GET_with_distinct_GetMyJurisdictions">
        <test-method signature="View_Specific_UserJurisdiction_using_GetMyJurisdictions(java.lang.String)[pri:0, instance:testsuite1.test.UserJurisdiction_GET_with_distinct_GetMyJurisdictions@1d2adfbe]" started-at="2022-04-29T11:03:33 IST" name="View_Specific_UserJurisdiction_using_GetMyJurisdictions" data-provider="ProbaseURL" finished-at="2022-04-29T11:03:39 IST" duration-ms="5962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://lnmjapi.adappt.ai/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- View_Specific_UserJurisdiction_using_GetMyJurisdictions -->
      </class> <!-- testsuite1.test.UserJurisdiction_GET_with_distinct_GetMyJurisdictions -->
      <class name="scenarios.api.UserJurisdiction_GetMyJurisdictions">
        <test-method signature="filename()[pri:0, instance:scenarios.api.UserJurisdiction_GetMyJurisdictions@49ec71f8]" started-at="2022-04-29T11:03:33 IST" name="filename" finished-at="2022-04-29T11:03:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filename -->
      </class> <!-- scenarios.api.UserJurisdiction_GetMyJurisdictions -->
      <class name="scenarios.api.UserJurisdiction_Indistinct">
        <test-method signature="filename()[pri:0, instance:scenarios.api.UserJurisdiction_Indistinct@1aa7ecca]" started-at="2022-04-29T11:01:49 IST" name="filename" finished-at="2022-04-29T11:01:49 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filename -->
      </class> <!-- scenarios.api.UserJurisdiction_Indistinct -->
      <class name="extend.api.CreateReport">
        <test-method signature="extend()[pri:1, instance:extend.api.CreateReport@399f45b1]" started-at="2022-04-29T11:01:49 IST" name="extend" finished-at="2022-04-29T11:01:49 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extend -->
      </class> <!-- extend.api.CreateReport -->
      <class name="scenarios.api.UserJurisdiction_UserID">
        <test-method signature="filename()[pri:0, instance:scenarios.api.UserJurisdiction_UserID@79e2c065]" started-at="2022-04-29T11:02:36 IST" name="filename" finished-at="2022-04-29T11:02:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filename -->
      </class> <!-- scenarios.api.UserJurisdiction_UserID -->
      <class name="testsuite1.test.UserJurisdiction_GET_with_distinct_UserID_JurisdictionID">
        <test-method signature="View_Specific_UserJurisdiction_using_UserID_JurisID(java.lang.String)[pri:0, instance:testsuite1.test.UserJurisdiction_GET_with_distinct_UserID_JurisdictionID@36bc55de]" started-at="2022-04-29T11:02:47 IST" name="View_Specific_UserJurisdiction_using_UserID_JurisID" data-provider="ProbaseURL" finished-at="2022-04-29T11:03:09 IST" duration-ms="22853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://lnmjapi.adappt.ai/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- View_Specific_UserJurisdiction_using_UserID_JurisID -->
      </class> <!-- testsuite1.test.UserJurisdiction_GET_with_distinct_UserID_JurisdictionID -->
      <class name="scenarios.api.UserJurisdiction_UserIDJurisdictionID">
        <test-method signature="filename()[pri:0, instance:scenarios.api.UserJurisdiction_UserIDJurisdictionID@35cabb2a]" started-at="2022-04-29T11:02:47 IST" name="filename" finished-at="2022-04-29T11:02:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filename -->
      </class> <!-- scenarios.api.UserJurisdiction_UserIDJurisdictionID -->
      <class name="testsuite1.test.UserJurisdiction_POST_with_distinct_GetByJurisdictionID">
        <test-method signature="Create_UserJurisdiction_using_GetByJurisdictionID(java.lang.String)[pri:0, instance:testsuite1.test.UserJurisdiction_POST_with_distinct_GetByJurisdictionID@16d04d3d]" started-at="2022-04-29T11:03:09 IST" name="Create_UserJurisdiction_using_GetByJurisdictionID" data-provider="ProbaseURL" finished-at="2022-04-29T11:03:33 IST" duration-ms="24018" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://lnmjapi.adappt.ai/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at auth.api.VerifyStatusLine.ensureLine200(VerifyStatusLine.java:22)
at depend_1.api.FrameSuite.UserJurisdiction_POST_Create_GetByJurisID(FrameSuite.java:4316)
at main.api.ExecuteAPILead.Create(ExecuteAPILead.java:110)
at apache.api.Shuffle.globalAdmin(Shuffle.java:61)
at apache.api.Operation.worksheet(Operation.java:13)
at testsuite1.test.UserJurisdiction_POST_with_distinct_GetByJurisdictionID.Create_UserJurisdiction_using_GetByJurisdictionID(UserJurisdiction_POST_with_distinct_GetByJurisdictionID.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_UserJurisdiction_using_GetByJurisdictionID -->
      </class> <!-- testsuite1.test.UserJurisdiction_POST_with_distinct_GetByJurisdictionID -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
